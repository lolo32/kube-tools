---
# Secret containing registry credentials
kind: secret
name: registry
get:
  path: registries
  name: quay-io.conf
---
# Secret containing docker client credential
kind: secret
name: daemon-arm64
get:
  path: docker-endpoints
  name: arm64.tar
---
# Secret containing registry credentials
kind: secret
name: daemon-amd64
get:
  path: docker-endpoints
  name: amd64.tar
---
# Build image
kind: pipeline
type: docker
name: default

platform:
  os: linux
  arch: arm64

steps:
  - name: credential
    # 3.17.0
    image: docker.io/alpine@sha256:8914eb54f968791faf6a8638949e480fef81e697984fba772b3976835194c6d4
    volumes:
      - name: dockercredentials
        path: /root/.docker
    environment:
      REGISTRY:
        from_secret: registry
    commands:
      - /bin/echo $${REGISTRY} > ~/.docker/config.json
  - name: configure-docker
    # 20
    image: docker.io/docker@sha256:83b5f0a88fc82a724c1ffdc4220e49aed855e7db3f30ab0ac3d27c515346caca
    depends_on:
      - credential
    volumes:
      - name: dockercredentials
        path: /root/.docker
    environment:
      DAEMON_ARM64:
        from_secret: daemon-arm64
      DAEMON_AMD64:
        from_secret: daemon-amd64
    commands:
      # Restore Docker contexts
      - /bin/echo $${DAEMON_ARM64} | /bin/base64 -d | /usr/local/bin/docker context import arm64daemon -
      - /bin/echo $${DAEMON_AMD64} | /bin/base64 -d | /usr/local/bin/docker context import amd64daemon -
      # Initialize buildx instance
      - INSTANCE=$$(/usr/local/bin/docker buildx create arm64daemon)
      - /usr/local/bin/docker buildx create --name $${INSTANCE} --append amd64daemon
      - /usr/local/bin/docker buildx use $${INSTANCE}
      - /usr/local/bin/docker buildx inspect --bootstrap
  - name: docker-build
    # 20
    image: docker.io/docker@sha256:83b5f0a88fc82a724c1ffdc4220e49aed855e7db3f30ab0ac3d27c515346caca
    depends_on:
      - configure-docker
    when:
      event:
        exclude:
          - tag
    volumes:
      - name: dockercredentials
        path: /root/.docker
    commands:
      # Build the image
      - |
        /usr/local/bin/docker buildx build \
          --file Dockerfile \
          --pull=true \
          --label org.opencontainers.image.created=$$(/bin/date --utc +"%Y-%m-%dT%H:%M:%SZ") \
          --label org.opencontainers.image.revision=${DRONE_COMMIT} \
          --label org.opencontainers.image.source=${DRONE_GIT_HTTP_URL} \
          --platform linux/amd64,linux/arm64 \
          .
  - name: docker-build-push
    # 20
    image: docker.io/docker@sha256:83b5f0a88fc82a724c1ffdc4220e49aed855e7db3f30ab0ac3d27c515346caca
    depends_on:
      - configure-docker
    when:
      event:
        - tag
      ref:
        - refs/tags/v*
    volumes:
      - name: dockercredentials
        path: /root/.docker
    commands:
      # Build the image the push
      - |
        /usr/local/bin/docker buildx build \
          --file Dockerfile \
          --pull=true \
          --label org.opencontainers.image.created=$$(/bin/date --utc +"%Y-%m-%dT%H:%M:%SZ") \
          --label org.opencontainers.image.revision=${DRONE_COMMIT} \
          --label org.opencontainers.image.source=${DRONE_GIT_HTTP_URL} \
          --tag "quay.io/lolo32/kube-tools:${DRONE_TAG}" \
          --platform linux/amd64,linux/arm64 \
          --push \
          .
  - name: clean-docker-buildx
    depends_on:
      - docker-build
      - docker-build-push
    status:
      - failure
      - success
    # 20
    volumes:
      - name: dockercredentials
        path: /root/.docker
    image: docker.io/docker@sha256:83b5f0a88fc82a724c1ffdc4220e49aed855e7db3f30ab0ac3d27c515346caca
    commands:
      - /usr/local/bin/docker buildx ls
      # Build the image the push
      - INSTANCE=$$(/usr/local/bin/docker buildx ls | /bin/grep '*' | /usr/bin/awk '{print $1}')
      - /usr/local/bin/docker buildx rm $${INSTANCE}
  - name: sign
    when:
      event:
        - tag
      ref:
        - refs/tags/v*
    # 3.17.0
    image: docker.io/alpine@sha256:8914eb54f968791faf6a8638949e480fef81e697984fba772b3976835194c6d4
    depends_on:
      - docker-build-push
    volumes:
      - name: dockercredentials
        path: /root/.docker
    environment:
      COSIGN_EXPERIMENTAL: "1"
    commands:
      # Install Cosign
      - /sbin/apk add curl
      - /usr/bin/curl -sSLo /usr/local/bin/cosign https://github.com/sigstore/cosign/releases/download/v1.13.1/cosign-linux-amd64 -sSLO https://github.com/sigstore/cosign/releases/download/v1.13.1/cosign-linux-amd64.sig
      - /bin/chmod 0755 /usr/local/bin/cosign
      - /usr/local/bin/cosign verify-blob --key release-cosign.pub --signature cosign-linux-amd64.sig /usr/local/bin/cosign
      # Sign the image
      - /usr/local/bin/cosign sign "quay.io/lolo32/kube-tools:${DRONE_TAG}"

volumes:
  - name: dockercredentials
    temp: {}
